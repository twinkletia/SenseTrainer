/*
  ==============================================================================

  This is an automatically generated GUI class created by the Projucer!

  Be careful when adding custom code to these files, as only the code within
  the "//[xyz]" and "//[/xyz]" sections will be retained when the file is loaded
  and re-saved.

  Created with Projucer version: 6.0.8

  ------------------------------------------------------------------------------

  The Projucer is part of the JUCE library.
  Copyright (c) 2020 - Raw Material Software Limited.

  ==============================================================================
*/

//[Headers] You can add your own extra header files here...
//[/Headers]

#include "SenseComponent.h"


//[MiscUserDefs] You can add your own user definitions and misc code here...
//[/MiscUserDefs]

//==============================================================================
UserInterface::UserInterface (juce::TextEditor& tex)
    : messagesBox(tex)
{
    //[Constructor_pre] You can add your own custom stuff here..
    //[/Constructor_pre]

    juce__comboBox.reset (new juce::ComboBox ("new combo box"));
    addAndMakeVisible (juce__comboBox.get());
    juce__comboBox->setEditableText (false);
    juce__comboBox->setJustificationType (juce::Justification::centredLeft);
    juce__comboBox->setTextWhenNothingSelected (TRANS("Select"));
    juce__comboBox->setTextWhenNoChoicesAvailable (TRANS("(no choices)"));
    juce__comboBox->addItem (TRANS("Level 1"), 1);
    juce__comboBox->addItem (TRANS("Level 2"), 2);
    juce__comboBox->addItem (TRANS("Level 3"), 3);
    juce__comboBox->addItem (TRANS("Level 4"), 4);
    juce__comboBox->addItem (TRANS("Level 5"), 5);
    juce__comboBox->addListener (this);

    juce__comboBox->setBounds (80, 24, 120, 24);

    juce__textButton.reset (new juce::TextButton ("new button"));
    addAndMakeVisible (juce__textButton.get());
    juce__textButton->setButtonText (TRANS("Replay"));
    juce__textButton->addListener (this);

    juce__textButton->setBounds (152, 232, 80, 80);

    juce__textButton2.reset (new juce::TextButton ("new button"));
    addAndMakeVisible (juce__textButton2.get());
    juce__textButton2->setButtonText (TRANS("Start"));
    juce__textButton2->addListener (this);

    juce__textButton2->setBounds (48, 232, 80, 80);

    juce__textButton3.reset (new juce::TextButton ("new button"));
    addAndMakeVisible (juce__textButton3.get());
    juce__textButton3->setButtonText (TRANS("Stop"));
    juce__textButton3->addListener (this);

    juce__textButton3->setBounds (256, 232, 80, 80);

    juce__comboBox2.reset (new juce::ComboBox ("new combo box"));
    addAndMakeVisible (juce__comboBox2.get());
    juce__comboBox2->setEditableText (false);
    juce__comboBox2->setJustificationType (juce::Justification::centredLeft);
    juce__comboBox2->setTextWhenNothingSelected (TRANS("Select"));
    juce__comboBox2->setTextWhenNoChoicesAvailable (TRANS("(no choices)"));
    juce__comboBox2->addItem (TRANS("C Major"), 1);
    juce__comboBox2->addItem (TRANS("C# Major"), 2);
    juce__comboBox2->addItem (TRANS("D Major"), 3);
    juce__comboBox2->addItem (TRANS("D# Major"), 4);
    juce__comboBox2->addItem (TRANS("E Major"), 5);
    juce__comboBox2->addItem (TRANS("F Major"), 6);
    juce__comboBox2->addItem (TRANS("F# Major"), 7);
    juce__comboBox2->addItem (TRANS("G Major"), 8);
    juce__comboBox2->addItem (TRANS("G# Major"), 9);
    juce__comboBox2->addItem (TRANS("A Major"), 10);
    juce__comboBox2->addItem (TRANS("A# Major"), 11);
    juce__comboBox2->addItem (TRANS("B Major"), 12);
    juce__comboBox2->addSeparator();
    juce__comboBox2->addListener (this);

    juce__comboBox2->setBounds (80, 56, 150, 24);

    juce__label.reset (new juce::Label ("new label",
                                        TRANS("Difficulty:")));
    addAndMakeVisible (juce__label.get());
    juce__label->setFont (juce::Font (15.00f, juce::Font::plain).withTypefaceStyle ("Regular"));
    juce__label->setJustificationType (juce::Justification::centredLeft);
    juce__label->setEditable (false, false, false);
    juce__label->setColour (juce::TextEditor::textColourId, juce::Colours::black);
    juce__label->setColour (juce::TextEditor::backgroundColourId, juce::Colour (0x00000000));

    juce__label->setBounds (10, 24, 72, 24);

    juce__label2.reset (new juce::Label ("new label",
                                         TRANS("Scale:")));
    addAndMakeVisible (juce__label2.get());
    juce__label2->setFont (juce::Font (15.00f, juce::Font::plain).withTypefaceStyle ("Regular"));
    juce__label2->setJustificationType (juce::Justification::centredLeft);
    juce__label2->setEditable (false, false, false);
    juce__label2->setColour (juce::TextEditor::textColourId, juce::Colours::black);
    juce__label2->setColour (juce::TextEditor::backgroundColourId, juce::Colour (0x00000000));

    juce__label2->setBounds (32, 56, 48, 24);

    cachedImage_speaker_off_png_1 = juce::ImageCache::getFromMemory (speaker_off_png, speaker_off_pngSize);

    //[UserPreSize]
    //[/UserPreSize]

    setSize (600, 400);


    //[Constructor] You can add your own custom stuff here..
    juce__comboBox->setSelectedId(1, juce::dontSendNotification);
    juce__comboBox2->setSelectedId(1, juce::dontSendNotification);
    juce__textButton->addShortcut(juce::KeyPress::KeyPress(juce::KeyPress::spaceKey));
    buttonflag = false;
    answerflag = false;
    (juce__textButton.get())->setEnabled(false);
    addChildComponent(speaker_on);
    speaker_on.setBounds(140, 108, speaker_on.getWidth(), speaker_on.getHeight());
    //[/Constructor]
}

UserInterface::~UserInterface()
{
    //[Destructor_pre]. You can add your own custom destruction code here..
    //[/Destructor_pre]

    juce__comboBox = nullptr;
    juce__textButton = nullptr;
    juce__textButton2 = nullptr;
    juce__textButton3 = nullptr;
    juce__comboBox2 = nullptr;
    juce__label = nullptr;
    juce__label2 = nullptr;


    //[Destructor]. You can add your own custom destruction code here..
    //[/Destructor]
}

//==============================================================================
void UserInterface::paint (juce::Graphics& g)
{
    //[UserPrePaint] Add your own custom painting code here..
    //[/UserPrePaint]

    {
        int x = 140, y = 108, width = 100, height = 100;
        //[UserPaintCustomArguments] Customize the painting arguments here..
        //[/UserPaintCustomArguments]
        g.setColour (juce::Colours::black);
        g.drawImage (cachedImage_speaker_off_png_1,
                     x, y, width, height,
                     0, 0, cachedImage_speaker_off_png_1.getWidth(), cachedImage_speaker_off_png_1.getHeight());
    }

    //[UserPaint] Add your own custom painting code here..
    //[/UserPaint]
}

void UserInterface::resized()
{
    //[UserPreResize] Add your own custom resize code here..
    //[/UserPreResize]

    //[UserResized] Add your own custom resize handling here..
    //[/UserResized]
}

void UserInterface::comboBoxChanged (juce::ComboBox* comboBoxThatHasChanged)
{
    //[UsercomboBoxChanged_Pre]
    //[/UsercomboBoxChanged_Pre]

    if (comboBoxThatHasChanged == juce__comboBox.get())
    {
        //[UserComboBoxCode_juce__comboBox] -- add your combo box handling code here..
        //[/UserComboBoxCode_juce__comboBox]
    }
    else if (comboBoxThatHasChanged == juce__comboBox2.get())
    {
        //[UserComboBoxCode_juce__comboBox2] -- add your combo box handling code here..
        center = 60 + (juce__comboBox2->getSelectedId() - 1);
        //[/UserComboBoxCode_juce__comboBox2]
    }

    //[UsercomboBoxChanged_Post]
    //[/UsercomboBoxChanged_Post]
}

void UserInterface::buttonClicked (juce::Button* buttonThatWasClicked)
{
    //[UserbuttonClicked_Pre]
    //[/UserbuttonClicked_Pre]

    if (buttonThatWasClicked == juce__textButton.get())
    {
        //[UserButtonCode_juce__textButton] -- add your button handler code here..
        buttonflag = true;
        speaker_on.setVisible(true);
        (juce__textButton.get())->setEnabled(false);
        //[/UserButtonCode_juce__textButton]
    }
    else if (buttonThatWasClicked == juce__textButton2.get())
    {
        //[UserButtonCode_juce__textButton2] -- add your button handler code here..
        generateQuiz(juce__comboBox->getSelectedId());
        (juce__textButton.get())->setEnabled(true);
        juce__textButton->setToggleState(true,juce::sendNotification);
        (juce__comboBox.get())->setEnabled(false);
        (juce__comboBox2.get())->setEnabled(false);
        (juce__textButton2.get())->setEnabled(false);
        answerflag = true;
        //[/UserButtonCode_juce__textButton2]
    }
    else if (buttonThatWasClicked == juce__textButton3.get())
    {
        //[UserButtonCode_juce__textButton3] -- add your button handler code here..
        answerflag = false;
        messagesBox.clear();
        (juce__comboBox.get())->setEnabled(true);
        (juce__comboBox2.get())->setEnabled(true);
        (juce__textButton.get())->setEnabled(false);
        (juce__textButton2.get())->setEnabled(true);
        //[/UserButtonCode_juce__textButton3]
    }

    //[UserbuttonClicked_Post]
    //[/UserbuttonClicked_Post]
}



//[MiscUserCode] You can add your own definitions of your custom methods or any other code here...
void UserInterface::replayCompleted()
{
    speaker_on.setVisible(false);
    (juce__textButton.get())->setEnabled(true);
    juce__textButton->setToggleState(false, juce::dontSendNotification);
    buttonflag = false;
}

void UserInterface::generateQuiz(int difficulty) {
    int rand;
    int interval[14] = { -12,-10,-8,-7,-5,-3,-1,2,4,5,7,9,11,12 };
    int i;
    switch (difficulty) {
    case 1:
        rand = generateRand(14);
        quiz[0] = center;
        quiz[1] = center + interval[rand];
        quiz[2] = 0;
        break;
    case 2:
        rand = generateRand(14);
        quiz[0] = center + interval[rand];
        quiz[1] = center;
        quiz[2] = 0;
        break;
    case 3:
        rand = generateRand(12) + 1;
        quiz[0] = center;
        quiz[1] = center + interval[rand];
        interval[rand] > 0
            ? quiz[2] = center + interval[rand + (juce::Random::getSystemRandom().nextInt(14 - 1 - rand) + 1)]
            : quiz[2] = center + interval[rand - (juce::Random::getSystemRandom().nextInt(rand) + 1)];
        quiz[3] = 0;
        break;
    case 4:
        quiz[0] = center + interval[generateRand(14)];
        quiz[1] = center;
        quiz[2] = center + interval[generateRand(14)];
        quiz[3] = 0;
        break;
    case 5:
        rand = juce::Random::getSystemRandom().nextInt(5);
        for (i = 0; i < 5; i++) {
            i == rand ? quiz[i] = center : quiz[i] = center + interval[generateRand(14)];
        }
        quiz[i] = 0;
        break;
    }
}

void UserInterface::nextQuiz() {
    generateQuiz(juce__comboBox->getSelectedId());
    juce__textButton->setToggleState(true, juce::sendNotification);
}

int UserInterface::generateRand(int range) {
    int rand = 0;
    rand = juce::Random::getSystemRandom().nextInt(range);
    if (previousRand == rand) {
        rand = generateRand(range);
    }
    previousRand = rand;
    return rand;
}
//[/MiscUserCode]


//==============================================================================
#if 0
/*  -- Projucer information section --

    This is where the Projucer stores the metadata that describe this GUI layout, so
    make changes in here at your peril!

BEGIN_JUCER_METADATA

<JUCER_COMPONENT documentType="Component" className="UserInterface" componentName=""
                 parentClasses="public juce::Component" constructorParams="juce::TextEditor&amp; tex"
                 variableInitialisers="messagesBox(tex)" snapPixels="8" snapActive="1"
                 snapShown="1" overlayOpacity="0.330" fixedSize="0" initialWidth="600"
                 initialHeight="400">
  <BACKGROUND backgroundColour="323e44">
    <IMAGE pos="140 108 100 100" resource="speaker_off_png" opacity="1.0"
           mode="0"/>
  </BACKGROUND>
  <COMBOBOX name="new combo box" id="cf3bf4e5f540eae3" memberName="juce__comboBox"
            virtualName="" explicitFocusOrder="0" pos="80 24 120 24" editable="0"
            layout="33" items="Level 1&#10;Level 2&#10;Level 3&#10;Level 4&#10;Level 5"
            textWhenNonSelected="Select" textWhenNoItems="(no choices)"/>
  <TEXTBUTTON name="new button" id="a4b9e9def2af5267" memberName="juce__textButton"
              virtualName="" explicitFocusOrder="0" pos="152 232 80 80" buttonText="Replay"
              connectedEdges="0" needsCallback="1" radioGroupId="0"/>
  <TEXTBUTTON name="new button" id="9df7a39bbaa8a44d" memberName="juce__textButton2"
              virtualName="" explicitFocusOrder="0" pos="48 232 80 80" buttonText="Start"
              connectedEdges="0" needsCallback="1" radioGroupId="0"/>
  <TEXTBUTTON name="new button" id="2c9717ff0e363a07" memberName="juce__textButton3"
              virtualName="" explicitFocusOrder="0" pos="256 232 80 80" buttonText="Stop"
              connectedEdges="0" needsCallback="1" radioGroupId="0"/>
  <COMBOBOX name="new combo box" id="5ec81851399a4dc0" memberName="juce__comboBox2"
            virtualName="" explicitFocusOrder="0" pos="80 56 150 24" editable="0"
            layout="33" items="C Major&#10;C# Major&#10;D Major&#10;D# Major&#10;E Major&#10;F Major&#10;F# Major&#10;G Major&#10;G# Major&#10;A Major&#10;A# Major&#10;B Major&#10;"
            textWhenNonSelected="Select" textWhenNoItems="(no choices)"/>
  <LABEL name="new label" id="696d87863e0723f5" memberName="juce__label"
         virtualName="" explicitFocusOrder="0" pos="10 24 72 24" edTextCol="ff000000"
         edBkgCol="0" labelText="Difficulty:" editableSingleClick="0"
         editableDoubleClick="0" focusDiscardsChanges="0" fontname="Default font"
         fontsize="15.0" kerning="0.0" bold="0" italic="0" justification="33"/>
  <LABEL name="new label" id="7ebf5030c9b0c192" memberName="juce__label2"
         virtualName="" explicitFocusOrder="0" pos="32 56 48 24" edTextCol="ff000000"
         edBkgCol="0" labelText="Scale:" editableSingleClick="0" editableDoubleClick="0"
         focusDiscardsChanges="0" fontname="Default font" fontsize="15.0"
         kerning="0.0" bold="0" italic="0" justification="33"/>
</JUCER_COMPONENT>

END_JUCER_METADATA
*/
#endif

//==============================================================================
// Binary resources - be careful not to edit any of these sections!

// JUCER_RESOURCE: speaker_off_png, 5066, "../../../../Downloads/speaker_off.png"
static const unsigned char resource_UserInterface_speaker_off_png[] = { 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,1,0,0,0,1,0,8,6,0,0,0,92,114,168,102,0,0,0,1,115,82,71,66,0,174,206,28,233,0,0,
0,4,103,65,77,65,0,0,177,143,11,252,97,5,0,0,0,9,112,72,89,115,0,0,14,195,0,0,14,195,1,199,111,168,100,0,0,19,95,73,68,65,84,120,94,237,221,11,112,92,213,125,199,113,180,43,217,88,42,13,54,96,234,64,49,
193,1,140,157,193,164,153,0,134,4,20,32,150,118,87,82,10,196,208,134,199,240,114,27,6,67,9,182,155,16,12,157,38,184,53,96,39,161,60,66,25,94,73,32,147,148,135,139,164,221,149,132,141,69,203,51,29,23,204,
240,54,134,144,12,137,93,8,6,7,41,54,218,93,245,119,246,30,123,134,49,182,87,187,87,58,247,241,253,204,156,185,231,252,13,26,61,246,255,191,231,220,123,247,236,30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,84,212,217,35,176,131,246,246,246,125,75,165,210,25,195,195,195,51,235,234,234,14,212,113,138,194,83,213,
159,172,227,111,76,83,236,109,29,223,82,251,239,92,46,215,173,35,66,132,2,128,29,180,181,181,29,170,196,254,161,186,25,47,82,25,253,63,155,85,28,110,78,36,18,75,186,186,186,6,109,24,1,70,1,192,118,29,
29,29,123,21,139,197,107,212,93,232,69,170,163,66,176,65,135,127,208,140,224,63,188,8,130,138,2,128,178,116,58,125,190,14,75,237,244,222,47,185,100,50,121,65,103,103,231,70,59,70,192,80,0,98,78,211,253,
163,117,198,190,93,221,89,94,196,119,230,26,193,87,179,217,236,203,222,16,65,66,1,136,169,150,150,150,41,58,59,47,215,25,255,111,109,104,52,125,168,214,172,34,176,198,27,34,40,40,0,49,211,220,220,188,
231,132,9,19,22,37,18,137,239,104,216,232,69,199,196,187,42,54,71,117,119,119,155,25,1,2,34,97,143,136,129,76,38,51,183,177,177,241,21,37,255,247,52,28,203,228,55,204,45,197,7,109,31,1,193,12,32,6,82,
169,212,12,157,125,111,87,59,222,134,156,25,30,30,158,159,203,229,110,177,67,56,70,1,136,48,173,243,39,105,157,255,47,74,252,121,26,6,101,182,247,254,208,208,208,129,125,125,125,3,118,12,135,146,246,136,
8,209,58,191,126,198,140,25,151,42,249,87,40,249,191,164,80,144,10,253,158,90,130,12,173,91,183,174,223,142,225,16,215,0,34,70,211,253,147,154,154,154,94,82,226,255,72,195,189,189,104,176,232,123,155,
111,187,112,140,37,64,68,100,50,153,67,180,190,254,145,146,171,221,134,2,173,84,42,53,231,243,249,199,236,16,142,48,3,8,185,57,115,230,52,41,249,151,169,187,62,44,201,111,104,25,144,178,93,56,68,1,8,175,
58,243,248,110,67,67,195,122,245,23,120,161,240,208,108,229,104,219,133,67,44,1,66,72,103,252,227,148,64,63,214,25,255,72,27,10,163,77,217,108,118,146,237,195,17,10,64,136,216,199,119,151,41,241,191,97,
67,161,54,48,48,208,208,223,223,95,176,67,56,192,18,32,36,82,169,212,213,245,245,245,102,157,239,60,249,53,251,248,192,118,107,50,110,220,184,191,180,93,56,66,1,8,56,173,243,79,87,123,211,62,190,59,193,
139,58,243,162,154,121,154,176,179,60,170,145,102,51,174,127,158,216,163,0,4,148,121,124,87,137,255,184,206,248,15,168,29,108,195,174,252,65,237,18,173,217,143,84,123,210,11,33,10,40,0,1,99,30,223,85,
226,255,88,103,252,231,149,248,174,159,221,47,170,221,188,117,235,214,105,74,252,91,213,47,149,163,136,12,10,64,64,204,157,59,55,169,196,191,76,235,252,215,149,248,223,84,200,233,99,218,90,231,63,86,44,
22,103,42,241,47,93,185,114,165,47,107,126,4,15,5,32,0,204,227,187,131,131,131,47,40,241,111,212,112,162,23,117,230,77,125,31,167,229,114,185,230,158,158,158,87,109,12,17,69,1,112,200,60,190,171,246,176,
166,251,171,52,156,238,69,221,208,25,223,188,59,111,113,169,84,58,162,187,187,123,133,23,69,212,81,0,28,48,143,239,106,186,127,157,186,102,159,188,142,114,208,173,251,52,221,63,84,211,253,37,249,124,126,
171,141,33,6,40,0,99,203,60,190,123,158,93,231,255,163,198,227,188,176,51,107,245,125,28,163,196,63,187,183,183,247,247,54,134,24,161,0,140,17,179,251,174,166,251,255,163,132,187,91,237,47,108,216,21,
179,77,247,133,74,252,207,107,186,255,43,47,132,56,162,0,140,50,243,248,174,18,255,103,90,91,63,173,225,23,188,168,27,90,231,15,233,176,44,153,76,154,233,254,93,38,84,254,7,196,22,5,96,148,164,82,169,
241,74,252,171,148,108,235,52,60,91,103,125,215,239,187,200,37,18,9,115,91,111,81,103,103,231,31,109,12,49,71,1,24,5,74,252,211,148,108,230,2,223,181,202,251,38,47,234,204,58,205,62,78,86,226,103,52,221,
55,197,8,216,142,2,224,35,251,248,174,217,235,206,108,127,253,153,114,208,17,77,247,55,43,241,23,14,12,12,204,200,231,243,143,218,48,240,49,20,0,31,152,199,119,117,214,191,213,62,190,123,162,13,187,82,
82,242,223,169,165,199,52,37,254,114,222,110,139,93,161,0,212,192,60,190,171,196,191,212,220,214,211,240,98,53,215,143,239,62,83,44,22,63,159,203,229,46,234,234,234,122,215,134,129,157,162,0,84,73,83,
253,19,204,227,187,234,254,155,154,235,199,119,223,86,242,159,165,196,63,182,167,167,231,121,27,3,118,139,2,48,66,58,227,31,162,228,255,79,77,245,205,142,182,174,31,223,221,162,117,254,18,45,61,14,83,
242,255,220,134,129,138,81,0,42,100,119,223,93,170,164,51,123,238,127,205,134,157,209,247,241,144,14,211,181,206,95,172,233,254,160,23,5,70,198,233,189,233,214,214,214,131,149,76,83,213,246,213,11,218,
108,16,57,81,253,177,254,208,202,221,210,247,212,160,239,111,158,142,251,217,144,75,102,87,158,75,179,217,236,106,111,56,246,52,3,250,137,126,23,231,218,97,45,102,232,231,48,183,75,225,200,152,20,128,
217,179,103,79,216,103,159,125,142,41,22,139,71,107,186,122,188,146,105,186,94,64,135,217,127,70,5,244,59,219,172,223,217,149,74,24,179,49,135,83,20,128,232,24,181,2,96,174,144,15,14,14,102,212,61,79,
205,28,93,191,241,37,172,138,74,254,219,84,60,175,233,237,237,125,207,198,156,82,1,248,169,10,192,57,118,88,181,82,169,52,83,75,152,151,236,16,14,248,126,13,160,185,185,121,111,173,149,175,81,242,191,
173,225,195,106,167,170,145,252,85,80,226,155,105,254,81,185,92,110,126,80,146,223,242,229,61,4,154,13,242,94,4,199,124,43,0,237,237,237,251,42,241,127,216,212,212,100,18,255,159,213,246,47,255,3,70,76,
137,255,150,206,142,115,149,248,39,105,138,108,110,53,2,163,194,151,2,144,74,165,218,53,69,53,219,71,93,174,22,184,139,120,97,161,196,31,80,187,90,237,112,77,141,31,176,225,32,242,101,233,168,34,231,250,
13,82,177,87,83,1,176,59,216,254,82,83,185,78,173,9,249,152,167,26,40,233,127,57,52,52,100,238,231,95,171,228,15,250,174,60,44,1,34,162,234,2,208,214,214,214,156,76,38,205,70,150,103,216,16,170,83,222,
149,71,137,255,55,143,60,242,200,239,108,44,232,152,1,68,68,85,5,64,103,253,235,116,198,90,173,23,238,20,27,194,8,233,247,247,142,218,5,90,227,31,21,194,93,121,152,1,68,196,136,10,128,185,159,159,201,
100,122,148,248,102,63,59,84,65,73,63,164,246,131,250,250,250,105,58,235,223,109,195,97,195,12,32,34,42,46,0,115,230,204,153,60,113,226,68,179,173,85,139,23,65,21,86,21,139,197,25,74,252,5,236,202,131,
32,168,168,0,116,116,116,236,213,208,208,96,62,167,46,204,159,71,239,140,206,248,175,233,208,166,233,254,41,189,189,189,230,173,195,64,32,84,82,0,18,133,66,161,75,199,67,189,33,42,165,196,223,172,195,
162,141,27,55,126,78,201,159,245,162,64,112,236,182,0,164,211,233,127,215,153,223,245,46,55,161,163,228,191,71,235,252,195,148,247,203,214,172,89,99,118,227,141,18,46,2,70,196,46,11,64,38,147,185,80,201,
127,145,29,162,2,74,124,179,43,207,44,173,243,207,215,58,223,236,191,31,69,92,4,140,136,157,22,128,246,246,246,233,122,49,223,98,135,216,61,115,15,255,28,37,62,187,242,32,52,118,90,0,116,22,235,214,217,
127,188,29,98,23,84,40,151,106,58,107,62,108,227,94,27,2,66,225,19,11,128,214,253,223,87,242,79,179,67,236,220,10,37,255,193,58,235,95,201,174,60,8,163,29,214,96,169,84,106,154,206,102,99,117,171,234,
21,37,144,121,211,203,59,42,56,230,237,174,155,116,52,31,83,237,140,190,159,251,116,248,180,55,218,165,155,116,198,191,204,246,99,69,39,8,54,4,137,136,29,10,64,38,147,49,183,171,210,222,200,127,74,176,
247,244,226,185,187,80,40,252,188,183,183,247,127,109,56,48,244,226,54,159,220,187,219,217,79,169,84,50,31,165,189,216,14,99,133,2,16,29,31,91,2,180,182,182,126,81,135,81,73,126,37,254,6,29,22,41,241,
15,210,31,125,97,16,147,223,208,11,187,162,43,211,154,37,197,249,10,182,47,63,59,119,1,220,251,88,1,208,139,122,169,237,250,237,58,173,147,167,40,241,151,245,245,245,57,157,226,239,142,10,85,69,247,166,
245,226,141,243,61,108,158,3,136,136,237,5,64,107,255,227,117,242,59,201,14,125,163,124,58,75,137,255,29,59,68,52,48,3,136,136,237,5,64,213,120,158,237,250,66,137,111,118,183,57,86,103,126,62,176,2,8,
168,114,1,104,111,111,111,84,178,158,89,142,248,64,95,203,56,77,201,255,140,13,133,6,215,0,16,39,229,2,160,169,216,92,189,238,247,44,71,124,160,175,117,117,62,159,239,179,195,80,49,149,203,118,119,137,
107,0,181,227,26,128,123,229,2,160,215,188,111,87,254,245,181,86,107,205,191,196,14,1,4,88,185,0,232,140,61,167,60,242,129,190,214,34,219,13,37,125,255,44,1,118,207,151,159,157,139,128,238,37,218,218,
218,102,233,184,183,55,172,89,167,206,254,107,108,31,64,192,37,52,101,63,206,246,107,166,147,231,53,182,27,90,92,3,168,8,215,0,34,194,20,128,153,182,95,171,215,187,187,187,215,218,126,104,177,4,168,8,
75,128,136,48,215,0,142,240,186,53,227,126,63,16,50,9,157,240,14,183,253,154,20,139,197,7,109,55,212,88,2,84,132,37,64,68,152,37,128,47,23,0,183,108,217,18,137,143,121,102,9,80,17,150,0,17,97,150,0,245,
94,183,38,31,246,247,247,23,108,31,64,72,152,37,64,205,5,64,179,136,119,109,23,64,136,152,25,64,210,235,86,79,69,196,236,230,19,9,92,3,64,156,148,159,4,172,149,114,166,100,187,161,199,53,0,196,137,47,
5,0,64,56,81,0,128,24,163,0,0,49,70,1,0,98,140,2,0,196,24,5,0,136,49,10,0,16,99,20,0,32,198,40,0,64,140,81,0,128,24,163,0,0,49,70,1,0,98,140,2,0,196,24,5,0,136,49,10,0,16,99,20,0,32,198,40,0,64,140,81,
0,128,24,163,0,0,49,230,75,1,168,171,171,139,76,33,97,83,80,196,137,249,96,144,1,219,175,154,190,198,100,219,13,61,54,5,69,156,152,207,5,248,208,246,107,177,191,61,2,8,17,51,3,168,185,0,168,136,52,180,
183,183,239,107,135,0,66,194,172,221,125,249,84,159,161,161,161,233,182,27,106,92,3,168,136,47,63,59,31,14,234,158,41,0,175,121,221,218,36,147,201,211,109,55,212,184,6,80,17,95,126,118,62,28,212,61,115,
13,224,21,219,175,137,78,156,103,218,46,128,144,72,168,10,251,242,177,222,42,36,83,90,91,91,191,100,135,161,197,18,160,34,44,1,34,66,127,131,196,99,182,95,51,45,3,254,201,118,67,139,37,64,69,88,2,68,68,
34,155,205,110,210,73,239,101,59,174,213,41,153,76,230,203,182,15,32,224,182,61,193,247,168,61,250,97,169,61,134,18,75,128,138,176,4,136,136,114,1,208,172,55,95,30,249,227,56,205,2,190,103,251,0,2,172,
92,0,180,12,200,235,196,247,127,229,136,63,174,78,167,211,95,179,253,80,225,26,64,69,184,6,16,17,219,150,0,37,181,251,188,174,111,126,209,218,218,58,219,246,67,131,37,0,226,100,91,1,48,103,190,187,108,
215,23,250,122,123,38,147,201,39,83,169,212,89,54,4,32,96,182,23,0,45,3,94,208,201,175,199,14,125,163,169,242,189,153,76,38,212,23,6,177,3,46,2,70,196,246,2,96,232,172,125,189,237,250,237,219,233,116,
250,119,106,87,204,158,61,123,130,141,5,18,215,0,42,194,53,128,136,248,88,1,208,44,96,181,102,1,207,216,161,175,148,87,83,212,150,79,154,52,233,183,42,4,203,91,90,90,254,202,254,83,160,112,13,160,34,204,
0,34,98,135,10,172,53,251,177,250,195,60,101,135,163,205,188,15,225,126,181,119,212,54,153,166,34,81,243,6,37,181,80,254,155,139,161,159,246,70,187,116,147,10,230,101,182,31,43,42,224,63,209,223,233,92,
59,172,197,12,253,14,253,122,8,13,85,248,196,41,152,254,192,119,235,15,124,158,29,98,231,86,168,96,124,43,151,203,189,101,199,177,160,215,199,79,245,250,56,199,14,171,166,89,212,204,124,62,239,203,123,
81,80,157,143,45,1,182,73,38,147,139,244,194,254,192,14,177,115,167,42,17,126,173,89,211,181,237,237,237,141,54,22,7,44,1,34,226,19,11,64,87,87,215,187,122,97,243,246,222,10,233,133,124,149,206,102,175,
197,232,150,39,23,1,35,226,19,11,128,161,181,89,175,102,1,63,176,67,236,222,1,42,4,247,106,122,252,116,107,107,235,145,54,6,4,218,78,11,128,161,181,237,2,29,30,247,70,168,132,102,78,199,104,9,181,54,147,
201,220,201,62,137,8,186,93,22,0,99,96,96,32,165,195,90,111,132,17,184,160,88,44,174,87,33,88,216,220,220,92,111,99,64,160,236,182,0,244,247,247,127,88,40,20,78,82,247,13,47,130,74,105,54,240,231,58,220,
208,216,216,248,162,150,5,105,47,10,4,199,110,11,128,209,219,219,251,158,166,181,199,13,15,15,63,103,67,24,1,21,130,195,244,251,203,106,54,176,178,165,165,229,179,54,12,56,87,81,1,48,58,59,59,55,110,218,
180,233,56,117,87,122,17,84,225,100,21,130,151,84,8,150,117,116,116,236,101,99,128,51,21,23,0,227,169,167,158,250,83,54,155,253,170,102,2,183,216,16,70,72,179,129,6,29,22,104,89,101,174,15,92,232,69,67,
135,231,0,34,98,68,5,96,155,92,46,55,95,69,224,124,181,130,13,97,132,84,8,246,211,225,14,21,129,231,218,218,218,142,246,162,161,193,115,0,17,81,85,1,48,84,4,238,209,139,248,68,117,223,244,34,168,210,44,
21,210,103,204,243,245,45,45,45,83,108,12,24,19,85,23,0,67,203,129,39,55,108,216,112,184,42,249,183,53,244,227,67,70,99,75,197,244,220,100,50,185,78,51,130,171,82,169,212,120,27,6,70,85,77,5,192,88,179,
102,205,80,62,159,191,94,107,218,195,116,38,187,209,134,81,5,21,129,38,29,174,213,241,85,21,129,32,63,138,205,53,128,136,168,185,0,108,211,219,219,251,123,45,11,46,215,108,96,178,134,203,213,204,219,123,
81,5,21,128,169,74,142,95,104,54,176,90,203,130,153,54,12,248,206,183,2,176,141,102,3,239,104,105,176,80,75,131,253,53,35,248,186,66,89,181,98,249,31,49,82,205,245,245,245,107,211,233,244,205,167,156,
114,202,167,108,44,8,184,8,24,17,190,23,128,109,204,210,64,51,130,7,85,12,218,6,6,6,246,86,200,220,62,188,90,173,75,109,189,247,95,161,2,73,205,8,46,25,55,110,220,27,154,17,92,108,99,174,177,4,136,8,167,
21,88,235,220,105,58,152,233,238,62,58,78,212,25,97,111,189,216,3,247,190,122,21,172,122,125,95,127,167,102,110,221,185,246,130,218,101,42,172,171,189,225,216,51,119,44,244,187,96,71,160,8,96,10,86,161,
57,115,230,52,105,58,190,88,221,111,233,197,239,252,42,189,138,210,131,58,44,208,44,107,204,119,35,98,71,160,232,24,181,37,64,212,244,245,245,13,40,217,174,212,11,127,134,146,239,97,27,118,70,223,199,
233,58,188,162,100,252,126,204,118,35,130,143,40,0,35,164,41,235,27,42,4,127,173,34,96,30,130,50,155,154,58,163,34,176,167,218,226,98,177,248,170,10,193,55,108,24,168,24,5,160,74,42,2,255,213,216,216,
248,57,117,205,206,192,78,111,121,170,8,28,168,118,159,138,0,187,17,97,68,40,0,53,184,255,254,251,139,154,17,220,84,40,20,62,171,25,193,173,10,57,189,221,169,34,96,118,35,122,86,133,224,14,118,35,66,37,
40,0,62,48,251,37,104,70,112,73,169,84,58,82,133,224,49,27,118,37,161,66,112,161,150,5,175,171,16,92,193,110,68,216,21,10,128,143,204,21,109,21,130,102,117,205,5,58,167,111,146,82,17,248,148,218,242,166,
166,166,151,82,169,148,217,209,9,216,1,5,96,20,104,89,240,144,102,3,71,168,187,88,51,2,167,159,116,36,135,38,18,137,85,153,76,166,91,237,16,27,3,202,40,0,163,68,179,129,173,42,4,75,52,21,63,84,195,123,
85,8,92,63,245,150,81,123,89,69,224,6,243,76,131,23,66,220,81,0,70,153,121,147,148,10,193,57,58,11,31,171,225,26,47,234,204,56,181,133,13,13,13,235,211,233,244,249,234,243,32,88,204,81,0,198,72,119,119,
247,175,84,8,190,168,137,128,217,73,105,131,13,187,178,127,93,93,221,93,154,13,60,27,194,221,136,224,35,10,192,216,26,206,229,114,247,216,219,134,215,107,252,145,23,118,102,86,169,84,122,90,133,224,103,
236,70,20,79,20,0,7,236,99,197,102,23,165,35,84,8,186,188,168,27,154,9,152,101,192,217,118,55,162,239,178,27,81,188,80,0,28,210,146,192,60,86,220,161,179,240,201,26,186,126,172,216,92,24,92,146,72,36,
94,214,178,224,84,47,138,168,163,0,4,64,62,159,127,212,60,86,172,217,192,229,26,190,239,69,157,249,140,190,143,135,210,233,116,127,107,107,235,225,54,134,136,162,0,4,132,121,172,88,179,129,27,11,133,194,
52,37,224,109,10,185,126,172,248,68,205,6,94,208,178,224,166,128,237,70,4,31,81,0,2,198,62,86,124,177,125,172,248,9,27,118,66,69,192,60,70,60,127,252,248,241,230,67,76,204,110,68,188,94,34,134,251,192,
1,151,74,165,190,174,68,92,166,54,213,134,92,122,81,133,233,239,245,189,152,198,134,32,17,64,69,15,56,37,200,3,131,131,131,211,213,53,187,17,253,169,28,116,103,166,150,5,143,235,216,225,13,107,182,213,
30,225,8,51,128,16,49,247,234,147,201,164,153,13,68,101,243,143,73,217,108,150,237,227,29,162,0,132,144,150,5,199,171,8,220,170,22,234,205,63,148,252,188,254,28,99,9,16,66,90,22,60,145,203,229,142,82,
215,124,186,240,198,114,48,100,134,135,135,159,181,93,56,68,1,8,175,97,157,65,239,210,146,192,188,219,112,153,154,235,199,138,71,234,57,123,132,67,20,128,144,235,236,236,252,163,10,193,34,117,205,254,
3,230,83,152,194,162,199,30,225,16,107,176,136,49,187,255,36,18,9,243,32,145,153,25,4,213,251,3,3,3,251,245,247,247,23,236,24,142,48,3,136,24,243,88,177,146,203,124,118,193,21,106,31,216,112,208,220,65,
242,7,3,51,128,8,51,59,3,151,74,165,37,234,94,164,22,136,98,175,162,84,40,22,139,7,153,141,82,108,8,14,81,0,98,32,157,78,155,59,6,55,214,213,213,157,224,69,156,90,102,175,89,32,0,40,0,49,162,66,112,134,
138,192,13,234,30,228,69,198,220,218,198,198,198,47,152,55,62,217,49,28,75,218,35,98,96,221,186,117,47,30,112,192,1,183,53,52,52,20,84,8,204,86,96,13,222,191,140,137,141,31,125,244,209,9,93,93,93,155,
237,24,1,192,12,32,166,82,169,148,249,56,49,243,88,241,153,54,52,106,180,238,223,92,42,149,190,220,211,211,243,188,13,33,32,40,0,49,103,54,5,85,130,222,174,238,44,47,226,47,125,237,223,170,125,37,159,
207,175,183,33,4,8,5,0,101,154,17,204,75,36,18,255,170,238,62,94,196,23,43,182,108,217,50,111,213,170,85,127,176,99,4,12,5,0,219,117,116,116,236,85,40,20,190,171,101,193,124,13,255,204,139,142,156,206,
248,175,233,107,44,206,102,179,247,219,16,2,138,2,128,29,152,45,192,198,143,31,255,77,117,207,86,51,31,129,94,17,37,126,94,135,59,115,185,220,131,94,4,65,71,1,192,46,153,141,65,147,201,228,201,74,110,
243,201,70,102,99,146,169,58,187,79,214,241,55,138,253,90,199,103,53,126,98,235,214,173,125,43,87,174,12,234,147,135,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,162,109,143,61,254,31,38,224,209,16,5,49,111,40,0,0,0,0,73,69,78,68,174,66,96,130,0,0};

const char* UserInterface::speaker_off_png = (const char*) resource_UserInterface_speaker_off_png;
const int UserInterface::speaker_off_pngSize = 5066;


//[EndFile] You can add extra defines here...

//[/EndFile]

